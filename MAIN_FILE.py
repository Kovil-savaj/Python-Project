# Form implementation generated from reading ui file 'MAIN_FILE.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 675)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.CustomContextMenu)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(200, 255, 199);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem = QtWidgets.QSpacerItem(250, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_5.addWidget(self.label_4)
        self.e1 = QtWidgets.QLineEdit(self.centralwidget)
        self.e1.setEnabled(False)
        self.e1.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(0, 0, 0);\n"
"border: 1px solid\n"
"")
        self.e1.setObjectName("e1")
        self.horizontalLayout_5.addWidget(self.e1)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(0, 0, 0);\n"
"")
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_5.addWidget(self.label_6)
        self.e2 = QtWidgets.QLineEdit(self.centralwidget)
        self.e2.setEnabled(False)
        self.e2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(0, 0, 0);\n"
"border: 1px solid\n"
"")
        self.e2.setObjectName("e2")
        self.horizontalLayout_5.addWidget(self.e2)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_5.addWidget(self.label_7)
        self.e3 = QtWidgets.QLineEdit(self.centralwidget)
        self.e3.setEnabled(False)
        self.e3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(0, 0, 0);\n"
"border: 1px solid\n"
"")
        self.e3.setObjectName("e3")
        self.horizontalLayout_5.addWidget(self.e3)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_5.addWidget(self.label_8)
        self.e4 = QtWidgets.QLineEdit(self.centralwidget)
        self.e4.setEnabled(False)
        self.e4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-color: rgb(0, 0, 0);\n"
"border: 1px solid\n"
"")
        self.e4.setObjectName("e4")
        self.horizontalLayout_5.addWidget(self.e4)
        spacerItem1 = QtWidgets.QSpacerItem(250, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem1)
        self.horizontalLayout.addLayout(self.horizontalLayout_5)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout_8.addWidget(self.label, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"border: 1px solid\n"
"")
        self.groupBox.setTitle("")
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.rb1 = QtWidgets.QRadioButton(self.groupBox)
        self.rb1.setStyleSheet("border: 0px solid")
        self.rb1.setObjectName("rb1")
        self.horizontalLayout_4.addWidget(self.rb1)
        self.rb2 = QtWidgets.QRadioButton(self.groupBox)
        self.rb2.setStyleSheet("border: 0px solid")
        self.rb2.setObjectName("rb2")
        self.horizontalLayout_4.addWidget(self.rb2)
        self.rb3 = QtWidgets.QRadioButton(self.groupBox)
        self.rb3.setStyleSheet("border: 0px solid\n"
"")
        self.rb3.setObjectName("rb3")
        self.horizontalLayout_4.addWidget(self.rb3)
        self.rb4 = QtWidgets.QRadioButton(self.groupBox)
        self.rb4.setStyleSheet("border: 0px solid")
        self.rb4.setObjectName("rb4")
        self.horizontalLayout_4.addWidget(self.rb4)
        self.verticalLayout_8.addWidget(self.groupBox)
        self.list1 = QtWidgets.QListWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Optima")
        font.setPointSize(18)
        font.setBold(True)
        font.setItalic(True)
        self.list1.setFont(font)
        self.list1.setAutoFillBackground(True)
        self.list1.setStyleSheet("background-color: rgba(156, 251, 134, 237);\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 0);")
        self.list1.setAutoScroll(True)
        self.list1.setObjectName("list1")
        item = QtWidgets.QListWidgetItem()
        self.verticalLayout_8.addWidget(self.list1)
        self.btn1 = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.btn1.setFont(font)
        self.btn1.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 0);")
        self.btn1.setObjectName("btn1")
        self.verticalLayout_8.addWidget(self.btn1)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setStyleSheet("border: 2px solid;\n"
"border-color: rgb(255, 255, 255);")
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("photo.jpg"))
        self.label_5.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_8.addWidget(self.label_5)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout_8.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3.addLayout(self.verticalLayout_8)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem3)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_9.addWidget(self.label_2)
        self.l1 = QtWidgets.QLabel(self.centralwidget)
        self.l1.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Optima")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        self.l1.setFont(font)
        self.l1.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);\n"
"border: 1px solid;\n"
"border-color: rgb(255, 255, 255);")
        self.l1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.l1.setObjectName("l1")
        self.verticalLayout_9.addWidget(self.l1)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_9.addWidget(self.line_2)
        spacerItem4 = QtWidgets.QSpacerItem(20, 3, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.verticalLayout_9.addItem(spacerItem4)
        self.list2 = QtWidgets.QListWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Optima")
        font.setPointSize(18)
        font.setBold(True)
        font.setItalic(True)
        self.list2.setFont(font)
        self.list2.setStyleSheet("background-color: rgba(156, 251, 134, 237);\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 0);")
        self.list2.setObjectName("list2")
        item = QtWidgets.QListWidgetItem()
        self.verticalLayout_9.addWidget(self.list2)
        self.btn2 = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.btn2.setFont(font)
        self.btn2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border: 1px solid;\n"
"border-color: rgb(0, 0, 0);")
        self.btn2.setObjectName("btn2")
        self.verticalLayout_9.addWidget(self.btn2)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("final/dreamteam/dream1.png"))
        self.label_3.setObjectName("label_3")
        self.verticalLayout_9.addWidget(self.label_3)
        self.horizontalLayout_3.addLayout(self.verticalLayout_9)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem5)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 900, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtGui.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtGui.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave_Team = QtGui.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        self.actionRules = QtGui.QAction(MainWindow)
        self.actionRules.setObjectName("actionRules")
        self.actionInstructions = QtGui.QAction(MainWindow)
        self.actionInstructions.setObjectName("actionInstructions")
        self.actionQuit = QtGui.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave_Team)
        self.menuFile.addAction(self.actionQuit)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        self.menuFile.triggered.connect(self.menufunction)
        #Self written setupUI start
        self.bat=0
        self.bwl=0
        self.ar=0
        self.wk=0
        self.avl=1000
        self.used=0

        self.rb1.toggled.connect(self.ctg)
        self.rb2.toggled.connect(self.ctg)
        self.rb3.toggled.connect(self.ctg)
        self.rb4.toggled.connect(self.ctg) 
        self.list1.itemDoubleClicked.connect(self.removelist1)     
        self.list2.itemDoubleClicked.connect(self.removelist2)  

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Dream Team Selector"))
        self.label_4.setText(_translate("MainWindow", "Batsmen"))
        self.label_6.setText(_translate("MainWindow", "Bowlers"))
        self.label_7.setText(_translate("MainWindow", "All Rounders"))
        self.label_8.setText(_translate("MainWindow", "Wicketkeepers"))
        self.label.setText(_translate("MainWindow", "Player Categories"))
        self.rb1.setText(_translate("MainWindow", "BAT"))
        self.rb2.setText(_translate("MainWindow", "BOWL"))
        self.rb3.setText(_translate("MainWindow", "AR"))
        self.rb4.setText(_translate("MainWindow", "WK"))
        __sortingEnabled = self.list1.isSortingEnabled()
        self.list1.setSortingEnabled(False)
        self.list1.setSortingEnabled(__sortingEnabled)
        self.btn1.setText(_translate("MainWindow", "Available Points : 1000"))
        self.label_2.setText(_translate("MainWindow", "Selected Players"))
        self.l1.setText(_translate("MainWindow", "???"))
        __sortingEnabled = self.list2.isSortingEnabled()
        self.list2.setSortingEnabled(False)
        self.list2.setSortingEnabled(__sortingEnabled)
        self.btn2.setText(_translate("MainWindow", "Points used : "))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionNew.setText(_translate("MainWindow", "New Team"))
        self.actionOpen.setText(_translate("MainWindow", "Open Team"))
        self.actionSave_Team.setText(_translate("MainWindow", "Save Team"))
        self.actionRules.setText(_translate("MainWindow", "Rules"))
        self.actionInstructions.setText(_translate("MainWindow", "Instructions"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setText(_translate("MainWindow", "Team Score"))


    def menufunction(self, action):
        txt=action.text()
        if txt=="New Team":        
            self.bat=0
            self.bwl=0
            self.ar=0
            self.wk=0
            self.avl=1000
            self.used=0
            self.list1.clear()
            self.list2.clear()
            self.l1.setText("???")
            self.showstatus()
            text, ok = QtWidgets.QInputDialog.getText(MainWindow, 'Dream Team Selector', 'Enter name of team:')
            if ok:
                self.l1.setText(str(text))
        if txt=='Save Team':
            selected=""
            count=self.list2.count()
            for i in range(count):
                selected=selected+self.list2.item(i).text()
                if i<count-1:
                    selected=selected+","
            self.saveteam(self.l1.text(),selected,self.used)
        if txt=="Open Team":
            self.bat=0
            self.bwl=0
            self.ar=0
            self.wk=0
            self.avl=1000
            self.used=0
            self.list1.clear()
            self.list2.clear()
            self.l1.setText("???")
            self.showstatus()
            self.openteam()
        if txt=="Team Score":
            from TEAM_SCORE import Ui_Dialog
            Dialog = QtWidgets.QDialog()
            ui = Ui_Dialog()
            ui.setupUi(Dialog)
            ret=Dialog.exec()

    def saveteam(self,nm,string,val):
        if self.bat+self.bwl+self.ar+self.wk!=11:
            self.showdlg("Insufficient players")
            return
        sql="INSERT INTO teams (name, players, value) VALUES ('"+nm+"','"+string+"','"+str(val)+"');"
        try:
            cur=conn.execute(sql)
            conn.commit()
            self.showdlg ("Team Saved successfully")
        except:
            self.showdlg ("error in operation")
            conn.rollback()

    def openteam(self):
        sql="select name from teams"
        cur=conn.execute(sql)
        teams=[]
        for row in cur:
            teams.append(row[0])
        team, ok = QtWidgets.QInputDialog.getItem(MainWindow, "Dream Team Selector",
                "Choose a team", teams, 0, False)
        if ok and team:
            self.l1.setText(team)
        sql1="select players, value from teams where name='"+team+"'"
        cur=conn.execute(sql1)
        row=cur.fetchone()
        selected=row[0].split(',')
        self.list2.addItems(selected)
        self.used=row[1]
        self.avl=1000-row[1]
        count=self.list2.count()
        for i in range(count):
            player=self.list2.item(i).text()
            sql="select ctg from stats where player='"+player+"'"
            cur=conn.execute(sql)
            row=cur.fetchone()
            ctgr=row[0]
            if ctgr=="BAT":self.bat+=1
            if ctgr=="BWL":self.bwl+=1
            if ctgr=="AR":self.ar+=1
            if ctgr=="WK":self.wk+=1            
            
        self.showstatus()

    def context_menu(MainWindow):
        MainWindow.menu = QtWidgets.QMenu()
        MainWindow.menu.addAction("Profile")
        MainWindow.menu.triggered[QtWidgets.QAction].connect(MainWindow.profile)
        MainWindow.menu.exec_(QtGui.QCursor.pos())

    def fillList(self,ctgr):
        if self.l1.text()=='???':
            self.showdlg("Enter name of team")
            return
        self.list1.clear()
        cursor = conn.execute("SELECT player from stats where ctg='"+ctgr+"'")
        for row in cursor:
            selected=[]
            for i in range(self.list2.count()):
                selected.append(self.list2.item(i).text())
            if row[0] not in selected:self.list1.addItem(row[0])

    def ctg(self):
        ctgr=''
        if self.rb1.isChecked()==True:ctgr='BAT'
        if self.rb2.isChecked()==True:ctgr='BWL'
        if self.rb3.isChecked()==True:ctgr='AR'
        if self.rb4.isChecked()==True:ctgr='WK'
       	
        self.fillList(ctgr)

    def criteria(self,ctgr, item):
        msg=''
        if ctgr=="BAT" and self.bat>=5:msg="Batsmen not more than 5"
        if ctgr=="BWL" and self.bwl>=5:msg="bowlers not more than 5"
        if ctgr=="AR" and self.ar>=3:msg="Allrounders not more than 3"
        if ctgr=="WK" and self.wk>=1:msg="Wicketkeepers not more than 1"
        if msg!='' or self.avl<=0:
            self.showdlg('You have exhausted your points')
            return False
    
        if ctgr=="BAT":self.bat+=1
        if ctgr=="BWL":self.bwl+=1
        if ctgr=="AR":self.ar+=1
        if ctgr=="WK":self.wk+=1
        cursor = conn.execute("SELECT player,value from stats where player='"+item.text()+"'")
        row=cursor.fetchone()
        self.avl=self.avl-int(row[1])
        self.used=self.used+int(row[1])
        return True

    def showstatus(self):
    	
        self.e1.setText(str(self.bat))
        self.e2.setText(str(self.bwl))
        self.e3.setText(str(self.ar))
        self.e4.setText(str(self.wk))
        self.btn1.setText("Available Points : {}".format(self.avl))
        self.btn2.setText("Points used : {}".format(self.used))
        
    def removelist1(self, item):
        """
        Function: Remove players from list1 and add them to list2
        """
        ctgr=''
        if self.rb1.isChecked()==True:ctgr='BAT'
        if self.rb2.isChecked()==True:ctgr='BWL'
        if self.rb3.isChecked()==True:ctgr='AR'
        if self.rb4.isChecked()==True:ctgr='WK'
        ret=self.criteria(ctgr, item)
        if ret==True:                         
            self.list1.takeItem(self.list1.row(item))
            self.list2.addItem(item.text())
            self.showstatus()
                         
    def showdlg(self, msg):
        Dialog = QtWidgets.QMessageBox()
        Dialog.setText(msg)
        Dialog.setWindowTitle("Dream Team Selector")
        ret=Dialog.exec()  

    def removelist2(self, item):
        """
		Remove players from list2 and add them back to list1
        """
        self.list2.takeItem(self.list2.row(item))
        
        cursor = conn.execute("SELECT player,value, ctg from stats where player='"+item.text()+"'")
        row=cursor.fetchone()
        self.avl=self.avl+int(row[1])
        self.used=self.used-int(row[1])
        ctgr=row[2]
        if ctgr=="BAT":
            self.bat-=1
            if self.rb1.isChecked()==True:self.list1.addItem(item.text())
        if ctgr=="BWL":
            self.bwl-=1
            if self.rb2.isChecked()==True:self.list1.addItem(item.text())
        if ctgr=="AR":
            self.ar-=1
            if self.rb3.isChecked()==True:self.list1.addItem(item.text())
        if ctgr=="WK":
            self.wk-=1
            if self.rb4.isChecked()==True:self.list1.addItem(item.text())
        self.showstatus()


if __name__ == "__main__":
    import sys
    import sqlite3
    conn = sqlite3.connect('Fantasy_Cricket.db')
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
